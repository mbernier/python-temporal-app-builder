interrupt_event = asyncio.Event()

async def main():
    # Connect client
    client = await temporal_client

    # Run a worker for the workflow
    async with Worker(
        client,
        WORKFLOW_TASK_QUEUE=config('WORKFLOW_TASK_QUEUE'),
        workflows=[{{WORKFLOW_CLASS}}], # needs a workflow class name
        activities=[{{WORKFLOW_ACTIVITIES}}], # activity method names
        graceful_shutdown_timeout=timedelta(seconds=config('worker_graceful_shutdown_timeout'))
    ):
        # Wait until interrupted
        print("Temporal worker started, ctrl+c to exit")
        await interrupt_event.wait()
        print("Shutting down")

if __name__ == "__main__":
    loop = asyncio.new_event_loop()
    try:
        loop.run_until_complete(main())
    except KeyboardInterrupt:
        interrupt_event.set()
        loop.run_until_complete(loop.shutdown_asyncgens())